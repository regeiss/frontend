import 'package:flutter/foundation.dart';

/// Helper para configura√ß√£o de banco de dados espec√≠fica para web
class WebDatabaseHelper {
  /// Verifica se est√° rodando na web
  static bool get isWeb => kIsWeb;

  /// Retorna o nome do banco baseado na plataforma
  static String getDatabaseName() {
    if (isWeb) {
      return 'cadastro_unificado_web_db';
    } else {
      return 'cadastro_unificado.db';
    }
  }

  /// Configura√ß√µes espec√≠ficas para web
  static Map<String, dynamic> getWebConfig() {
    return {
      'enableForeignKeys':
          false, // Foreign keys n√£o s√£o totalmente suportadas no IndexedDB
      'enableWAL': false, // WAL mode n√£o √© suportado na web
      'enableSync': true, // Habilita sincroniza√ß√£o
    };
  }

  /// Configura√ß√µes espec√≠ficas para mobile/desktop
  static Map<String, dynamic> getNativeConfig() {
    return {
      'enableForeignKeys': true,
      'enableWAL': true,
      'enableSync': true,
      'logStatements': kDebugMode,
    };
  }

  /// Retorna configura√ß√µes baseadas na plataforma
  static Map<String, dynamic> getPlatformConfig() {
    return isWeb ? getWebConfig() : getNativeConfig();
  }

  /// Log espec√≠fico para diferentes plataformas
  static void logPlatformInfo() {
    if (kDebugMode) {
      print(
          'üèóÔ∏è Database Platform: ${isWeb ? 'Web (IndexedDB)' : 'Native (SQLite)'}');
      print('üì± Configuration: ${getPlatformConfig()}');
    }
  }
}

/// Extens√£o para adicionar m√©todos √∫teis ao AppDatabase
extension AppDatabaseExtensions on Object {
  /// Verifica se uma opera√ß√£o √© suportada na plataforma atual
  bool isOperationSupported(String operation) {
    if (WebDatabaseHelper.isWeb) {
      // Opera√ß√µes n√£o suportadas na web
      const unsupportedOpsWeb = [
        'PRAGMA foreign_keys',
        'PRAGMA journal_mode',
        'ATTACH DATABASE',
        'DETACH DATABASE'
      ];

      return !unsupportedOpsWeb
          .any((op) => operation.toUpperCase().contains(op.toUpperCase()));
    }

    return true; // Todas as opera√ß√µes s√£o suportadas no nativo
  }
}
